Input: (2 -> 4 -> 3) + (5 -> 6 -> 4)
Output: 7 -> 0 -> 8
Explanation: 342 + 465 = 807.

想法1：
如果存在LinkList1和2，然后相加，l1+l2+carry。定义一个carry，初始为0，如果2个数相加大于10取remainder，carry+1. 最后把数加入新list中
l1:   a1->a2->a3
l2:   b1->b2->b3
l3:   a1+b1+carry->a2+b2+carry->a3+b3+carry
l4:   a1+b1+carry  等于头文件

ListNode知识点:
结尾都需要只想下一个节点，ListNode=ListNode.next;

class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode result=new ListNode(0);
        ListNode p=result;
        int carry=0;
        while(l1!=null || l2!=null){
            int n1= l1 == null ? 0 : l1.val;
            int n2= l2 == null ? 0 : l2.val;
            int sum=n1+n2+carry;
            carry= sum >= 10 ? 1 : 0;
            if(l1!=null) l1=l1.next;
            if(l2!=null) l2=l2.next;
            p.next=new ListNode(sum%10);
            p=p.next;
            }
        if (carry==1) p.next=new ListNode(1);
        return result.next;
    }
}
