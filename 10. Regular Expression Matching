class Solution {
    public boolean isMatch(String s, String p) {
        boolean[][] dp=new boolean[s.length()+1][p.length()+1]; //从1开始数，所以+1处理
        dp[0][0]=true;
        for(int i=1;i<=p.length();i++){ //如果s为null，结果为真的情况（a*）
            if(p.charAt(i-1)=='*' && dp[0][i-2]){ //p为*,看p-1的     因为是i是从1开始，所以要进行-1处理
                dp[0][i]=true;
            }
        }
        for(int i=1;i<=s.length();i++){
            for(int j=1;j<=p.length();j++){
                if(p.charAt(j-1)==s.charAt(i-1) || p.charAt(j-1)=='.'){
                    dp[i][j]=dp[i-1][j-1];   //当前的数和前面的数相等
                }else if(p.charAt(j-1)=='*'){
                    if(s.charAt(i-1) != p.charAt(j-2) && p.charAt(j-2) != '.'){
                        dp[i][j]=dp[i][j-2];
                    }else{//*前的字母和当前s不同且不为。
                        dp[i][j]=(dp[i][j-2] || dp[i][j-1] || dp[i-1][j]);//*表示0，1或者N的时候
                    }
                }
            }
        }
        return dp[s.length()][p.length()];
    }
}
